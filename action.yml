---
name: Automated Version Bump for .NET libraries
author: 'Jeff Jones'
description: Automated version bump for .NET libraries to follow Semantic Versioning.
branding:
  icon: 'chevrons-up'
  color: 'gray-dark'
runs:
  using: node16
  main: src/index.js
inputs:
  type:
    description: 'Which type of project are you bumping version for? This is important as .NET Core projects store versions in .csproj files, and .NET Framework use AssemblyInfo.cs. Use either "csproj" or "assembly"'
    default: 'csproj'
    required: false
  tag-prefix:
    description: 'Prefix that is used for the git tag'
    default: ''
    required: false
  minor-wording:
    description: |
      Words list that trigger a minor version bump.
      Use "," to separate multiple words.
    default: 'feat'
    required: false
  major-wording:
    description: |
      Words list that trigger a major version bump.
      Use "," to separate multiple words.
    default: 'feat!,fix!,refactor!'
    required: false
  patch-wording:
    description: |
      Words list that trigger a patch version bump.
      Use "," to separate multiple words.
    default: 'fix'
    required: false
  version-part:
    description: |
      This indicates which version part to bump.  If specified, it will force bump on that segment. Options [Major | Minor | Patch]
    default: ''
    required: false
  version-override:
    description: |
      The version to change the project version to.  If specified, it will force setting the project to the supplied version.
    default: ''
    required: false
  release-candidate-wording:
    description: |
      Words list that trigger a release candidate version bump.
      Use "," to separate multiple words.
    default: 'next'
    required: false
  skip-tag:
    description: 'Avoid to add a TAG to the version update commit'
    default: 'true'
    required: false
  skip-commit:
    description: 'Avoid to add a commit after the version is bumped'
    default: 'false'
    required: false
  skip-push:
    description: 'If true, skip pushing any commits or tags created after the version bump'
    default: 'false'
    required: false
  path-to-file:
    description: 'Path to the csproj file where the version is located'
    required: true
  target-branch:
    description: 'A separate branch to perform the version bump on'
    default: ''
    required: false
  pre-release-id:
    description: 'Set a custom id for prerelease build'
    default: 'next'
    required: false
  commit-message:
    description: |
      Set a custom commit message for version bump commit.
      Use {{version}} as a placeholder for the new version.
    default: 'ci: version bump to {{version}}'
    required: false
  release-commit-message-regex:
    description: |
      Set a custom commit message regex for release commits.
      Use {{version}} as a placeholder for the new version.
      Default
    default: 'ci: version bump to {{version}}'
    required: false
  dry-run:
    description: 'Allows running the action without modifying the file and committing changes.'
    default: false
    required: false

outputs:
  wasBumped:
    description: 'Boolean to check if the version of the library was bumped'
  newVersion:
    description: 'The new version of the library'
  oldVersion:
    description: 'The old version of the library'
